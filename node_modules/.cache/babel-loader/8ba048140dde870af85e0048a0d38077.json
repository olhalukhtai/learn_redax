{"ast":null,"code":"export const loadPostAction = () => {\n  return dispatch => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(resp => resp.json()).then(posts => dispatch({\n      type: \"LOAD_POST\",\n      payload: posts\n    }));\n  };\n};\n/*\nexport const loadPostAction =() =>{\n    return(dispatch)=>{\n        async function getPost(){\n            const resp=await fetch (\"https://jsonplaceholder.typicode.com/posts\")\n            const posts=await resp.json()\n            return posts\n        }\n        const posts=getPost()\n\n        .then(posts=>\n            dispatch({type:\"LOAD_POST\",payload:posts}))\n        \n    }\n}*/\n\nexport const addPostAction = function (title, body) {\n  let userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  state.forEach((post, idx) => {\n    userId = idx + 1;\n  });\n  return {\n    type: \"ADD_POST\",\n    payload: {\n      title,\n      body,\n      userId,\n      id\n    }\n  };\n};\nexport const deletePostAction = title => {\n  return {\n    type: \"DELETE_POST\",\n    payload: title\n  };\n};","map":{"version":3,"names":["loadPostAction","dispatch","fetch","then","resp","json","posts","type","payload","addPostAction","title","body","userId","id","state","forEach","post","idx","deletePostAction"],"sources":["/Users/olgaluhtaj/Desktop/react_modul/src/store/actions/postAction.js"],"sourcesContent":["\nexport const loadPostAction = () => {\n    return (dispatch) => {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(resp => resp.json())\n        .then(posts => dispatch({type:\"LOAD_POST\",payload:posts}))\n    }\n}\n/*\nexport const loadPostAction =() =>{\n    return(dispatch)=>{\n        async function getPost(){\n            const resp=await fetch (\"https://jsonplaceholder.typicode.com/posts\")\n            const posts=await resp.json()\n            return posts\n        }\n        const posts=getPost()\n\n        .then(posts=>\n            dispatch({type:\"LOAD_POST\",payload:posts}))\n        \n    }\n}*/\n\nexport const  addPostAction =(title,body,userId=0,id=0)=>{\n\n    state.forEach((post,idx)=>{userId=idx+1})\n    return({type:\"ADD_POST\",payload:{title,body,userId,id}})\n}\n\n\nexport const deletePostAction = (title) => {\n    return({type:\"DELETE_POST\",payload:title})\n}\n\n"],"mappings":"AACA,OAAO,MAAMA,cAAc,GAAG,MAAM;EAChC,OAAQC,QAAQ,IAAK;IACjBC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACG,KAAK,IAAIL,QAAQ,CAAC;MAACM,IAAI,EAAC,WAAW;MAACC,OAAO,EAACF;IAAK,CAAC,CAAC,CAAC;EAC9D,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAOG,aAAa,GAAE,UAACC,KAAK,EAACC,IAAI,EAAiB;EAAA,IAAhBC,MAAM,uEAAC,CAAC;EAAA,IAACC,EAAE,uEAAC,CAAC;EAElDC,KAAK,CAACC,OAAO,CAAC,CAACC,IAAI,EAACC,GAAG,KAAG;IAACL,MAAM,GAACK,GAAG,GAAC,CAAC;EAAA,CAAC,CAAC;EACzC,OAAO;IAACV,IAAI,EAAC,UAAU;IAACC,OAAO,EAAC;MAACE,KAAK;MAACC,IAAI;MAACC,MAAM;MAACC;IAAE;EAAC,CAAC;AAC3D,CAAC;AAGD,OAAO,MAAMK,gBAAgB,GAAIR,KAAK,IAAK;EACvC,OAAO;IAACH,IAAI,EAAC,aAAa;IAACC,OAAO,EAACE;EAAK,CAAC;AAC7C,CAAC"},"metadata":{},"sourceType":"module"}